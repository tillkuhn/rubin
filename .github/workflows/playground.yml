# this is our action playground which is triggered whenever this file is changes
name: playground

on:
  push:
    paths: [ '.github/workflows/playground.yml' ]

jobs:
  playground-job:
    name: Come out and play 1
    runs-on: ubuntu-latest
    #permissions:
   #   packages: write  # required to write / cleanup container registry
    #       contents: write  # for go-releaser binaries
    steps:
      # https://github.com/marketplace/actions/delete-older-releases
      - name: Delete old released binaries
        uses: dev-drprasad/delete-older-releases@v0.3.3
        with:
          #repo: <owner>/<repoName> # defaults to current repo
          keep_latest: 5
          keep_min_download_counts: 1 # Optional parameters
          delete_expired_data: 30 # Optional parameters
          #delete_tag_pattern: beta # defaults to ""
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install latest rubin Kafka Record producer
        run: |
          echo "Tempdir runner.temp: ${{ runner.temp }}"
          curl -LsSo ${{ runner.temp }}/rubin.zip $(curl -LsS 'https://api.github.com/repos/tillkuhn/rubin/releases/latest' | jq -r '.assets[] | select(.name|endswith("linux_amd64.zip")).browser_download_url')
          unzip ${{ runner.temp }}/rubin.zip -d ${{ runner.temp }} && chmod u+g ${{ runner.temp }}/rubin
          mkdir app/
          echo hase >app/app1
          echo hase >app/app2

      - name: Upload binaries built by go-releaser
        uses: actions/upload-artifact@v4
        with:
          name: go-releaser-binaries
          path: app/
          if-no-files-found: error
          retention-days: 1

      - name: Test Kafka Messaging
        id: test-kafka-messaging
        # GitHub vars: https://dev.to/mihinduranasinghe/working-with-environment-variables-github-actions-part-2-46po
        # Default Env Vars: https://docs.github.com/en/actions/learn-github-actions/variables#default-environment-variables
        # https://stackoverflow.com/questions/59073850/github-actions-get-url-of-test-build
        # GITHUB_REPOSITORY=<github-org>/rubin
        # GITHUB_ACTION=test-kafka-messaging  name or id (if present) of the step
        # GITHUB_JOB=playground-job The job_id of the current job. For example, greeting_job.
        # GITHUB_WORKFLOW=playground name of the workflow on top, or basename of yml file
        run: |
          ${{ runner.temp }}/rubin -ce -key "${GITHUB_REPOSITORY}/$GITHUB_JOB" \
          -source "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
          -type "net.timafe.event.ci.published.v1" -subject "${GITHUB_REPOSITORY}/some-subject" \
          -record "{\"action\":\"$GITHUB_ACTION\",\"version\":\"${GITHUB_REF#refs/*/}\",\"commit\":\"$GITHUB_SHA\",\"repository\":\"$GITHUB_REPOSITORY\",\"actor\":\"$GITHUB_ACTOR\"}" \
          -header "producer=rubin"
        env:
          KAFKA_PRODUCER_TOPIC_URL: ${{ secrets.KAFKA_PRODUCER_TOPIC_URL }}
          KAFKA_PRODUCER_API_SECRET: ${{ secrets.KAFKA_PRODUCER_API_SECRET }}

  playground-job2:
    name: Come out and play 2
    runs-on: ubuntu-latest
    needs: [playground-job]
    steps:
      - name: Download binaries built by go-releaser from previous job
        uses: actions/download-artifact@v4
        with:
          name: go-releaser-binaries
          path: app2/ # this path will contain app1 and app2
      - name: look
        run: |
          ls -l app2/
